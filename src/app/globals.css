@import "tailwindcss";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);

  --color-background-light: hsl(0 0% 100%);
  --color-background-dark: hsl(207 95% 8%);
  --color-background-custom: hsl(187 71% 82%);
  --color-background-pastel: hsl(279 100% 93%);
  --color-card: hsl(207 97% 12%);
  --color-accent: hsl(190 92% 66%);
  --percent-triangle-thumb-offset: 8%;
}

@layer base {
  [data-theme="light"] {
    --color-card: hsl(207 97% 12%);
    --color-accent: hsl(190 92% 66%);
  }
  [data-theme="dark"] {
    --color-card: hsl(261, 100%, 66%);
    --color-accent: hsl(0 0% 96%);
  }
  [data-theme="custom"] {
    --color-card: hsl(182, 87%, 39%);
  }
  [data-theme="pastel"] {
    --color-card: hsl(291 46% 83%);
    --color-accent: hsl(151, 65%, 73%);
  }
}

:root[data-theme="light"] {
  background-color: var(--color-background-light);
}

:root[data-theme="dark"] {
  background-color: var(--color-background-dark);
}

:root[data-theme="custom"] {
  background-color: var(--color-background-custom);
}

:root[data-theme="pastel"] {
  background-color: var(--color-background-pastel);
}

/* Creates a isosceles triangle where one side is horizontally flat on the bottom and one corner sticks straight upwards. Used for a 3-way toggle.*/
.triangle {
  position: relative;
  width: 100%;
  aspect-ratio: 1;
  clip-path: polygon(50% 0,100% 100%,0 100%);
  background-color: var(--color-card);
}

/* The thumb of the 3-way toggle triangle should also have the triangle class, plus the thumb. It is meant to fit inside a corner of the larger triangle.*/
.triangle .thumb {
  position: absolute;
  width: 42%;
  background-color: var(--color-accent);
}

.triangle.thumb.leftOption,
.triangle.thumb.thumb.rightOption {
  bottom: calc(var(--percent-triangle-thumb-offset) - 2%);
}

.triangle.thumb.leftOption {
  left: var(--percent-triangle-thumb-offset);
}

.triangle.thumb.topOption {
  top: var(--percent-triangle-thumb-offset);
  left: 50%;
  transform: translateX(-50%);
}

.triangle.thumb.rightOption {
  right: var(--percent-triangle-thumb-offset);
}

.triangle-rounded {
  --radius: 8px;
  --width: 50px

  width: var(--width);
  aspect-ratio: 1/cos(30deg);
  --_g:calc(tan(60deg)*var(--radius)) bottom var(--radius),#000 98%,#0000 101%;
  mask:
    /* a conic gradient to fill the middle area */
    conic-gradient(from -30deg at 50% calc(200% - 3*var(--radius)/2),#000 60deg,#0000 0)
     0 100%/100% calc(100% - 3*var(--radius)/2) no-repeat,
    /* 3 radial gradients for 3 circles */
    radial-gradient(var(--radius) at 50% calc(2*var(--radius)),#000 98%,#0000 101%),
    radial-gradient(var(--radius) at left  var(--_g)),
    radial-gradient(var(--radius) at right var(--_g));
  /* the 3-point polygon */
  clip-path: polygon(50% 0,100% 100%,0 100%);
}

@media (min-width: 640px) {
  .triangle-rounded {
    --radius: 6px;
    --width: 30px;
  }
}

@media (min-width: 768px) {
  .triangle-rounded {
    --radius: 7px;
    --width: 40px;
  }
}

@media (min-width: 1024px) {
  .triangle-rounded {
    --radius: 8px;
    --width: 50px;
  }
}
